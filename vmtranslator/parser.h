/*! \file
***************************************************************************************************************
file name:					parser.h
*	\copyright				FourE
*	\brief					parser header file
*	\author					Frank Eggink
*	\date	created:			2020-02-03

***************************************************************************************************************
\par	Description
***************************************************************************************************************

	Description

***************************************************************************************************************
\note
***************************************************************************************************************

	note description

***************************************************************************************************************
*/

#ifndef __PARSER_H
#define __PARSER_H

/*
***************************************************************************************************************
	INCLUDE FILES
***************************************************************************************************************
*/

#include <stdint.h>


/*
***************************************************************************************************************
	Make header CPP compatible
***************************************************************************************************************
*/

#ifdef __cplusplus
extern "C" {
#endif

/*
***************************************************************************************************************
	GLOBAL DEFINES
***************************************************************************************************************
*/


/*
***************************************************************************************************************
	GLOBAL TYPEDEF
***************************************************************************************************************
*/

typedef enum {
	 CT_ADD
	,CT_SUB
	,CT_NEG
	,CT_EQ
	,CT_GT
	,CT_LT
	,CT_AND
	,CT_OR
	,CT_NOT
	,CT_PUSH
	,CT_POP
	,CT_LABEL
	,CT_GOTO
	,CT_IFGOTO
	,CT_FUNCTION
	,CT_CALL
	,CT_RETURN
	,CT_UNKNOWN
} E_commandType;

typedef enum {
	 MS_LOCAL
	,MS_ARGUMENT
	,MS_THIS
	,MS_THAT
	,MS_CONSTANT
	,MS_STATIC
	,MS_POINTER
	,MS_TEMP
	,MS_UNKNOWN
} E_memorySegment;


typedef struct {
	E_commandType commandType;
	union {
		char* name;
		E_memorySegment memorySegment;
	} argument1;
	uint16_t value;
} T_vmCommand;

/*
***************************************************************************************************************
	GLOBAL VARS
***************************************************************************************************************
*/


/*
***************************************************************************************************************
	GLOBAL FUNCTION PROTOTYPES
***************************************************************************************************************
*/

uint8_t ParseCommand(char* input);
E_commandType GetCommandType(void);
uint16_t GetValue(void);
E_memorySegment GetMemorySegment(void);
char* GetName(void);

/*
***************************************************************************************************************

***************************************************************************************************************
*/

#ifdef __cplusplus
}
#endif

#endif		// __PARSER_H

